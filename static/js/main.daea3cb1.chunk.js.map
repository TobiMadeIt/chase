{"version":3,"sources":["images/placeholder_restaurant.png","images/pizza-logo.png","components/PlaceView.js","components/SavedPlaceItem.js","components/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","noop","PlaceView","props","_props$venueDetails","venueDetails","name","photoURL","category","tip","priceTier","distance","getNextPlace","gettingNextPlace","handleLunchClick","react_default","a","createElement","es","className","fluid","centered","style","height","alt","objectFit","width","src","RestaurantPlaceholder","Content","Header","Meta","Object","toConsumableArray","Array","map","e","i","key","fitted","Description","extra","columns","Column","target","onClick","primary","color","disabled","defaultProps","SavedPlaceItem","_ref","Image","size","verticalAlign","as","CLIENT_ID","CLIENT_SECRET","db","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchRoughLocation","fetch","then","response","ok","json","Error","location","setState","roughLocation","reportLocation","catch","console","log","handleLocationSuccess","position","locationDetails","coords","handleLocationFailure","message","state","preciseLocationFetched","undefined","venueResults","savedPlaces","currentVenueDetails","currentVenue","sidebarVisibility","loadPlaces","bind","assertThisInitialized","loadPlaceDetails","toggleSidebar","_this2","asyncToGenerator","regenerator_default","mark","_callee","docRef","wrap","_context","prev","next","addDoc","collection","userAgent","window","navigator","ip","timeStamp","Date","sent","id","href","geolocation","getCurrentPosition","stop","error","parameters","_this3","url","concat","constructVenueSearchURL","statusText","Promise","resolve","reject","venues","length","reason","alert","nextVenue","venueId","_this4","coordinates","venue","bestPhoto","prefix","suffix","categories","price","tier","tips","groups","items","text","substring","Math","ceil","lat","lng","_this$state$currentVe","open","Pushable","Card","animation","visible","textAlign","Group","divided","place","components_SavedPlaceItem","Pusher","PizzaLogo","computer","tablet","mobile","components_PlaceView","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","components_App","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.daea3cb1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder_restaurant.86d14ad8.png\";","module.exports = __webpack_public_path__ + \"static/media/pizza-logo.3d287be5.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Card, Icon, Button, Grid} from 'semantic-ui-react';\nimport RestaurantPlaceholder from '../images/placeholder_restaurant.png';\nimport '../styles/PlaceView.css';\n\nconst noop = () => {};\n\nconst PlaceView = (props) => {\n\n    const {name, photoURL, category, tip, priceTier, distance} = props.venueDetails,\n      {getNextPlace, gettingNextPlace, handleLunchClick} = props;\n\n    return (\n      <div>\n        <Card className=\"place-card\" fluid centered>\n          <div style={{height:'20rem',}}>\n            <img alt=\"restaurant\" style={{objectFit: 'cover', width:'100%', height:'100%'}}\n              src={photoURL || RestaurantPlaceholder} />\n          </div>\n          <Card.Content>\n            <Card.Header className=\"place-header\">\n              {name}\n            </Card.Header>\n            <Card.Meta className=\"place-price\">\n              <span>\n                {[...Array(priceTier)].map((e, i) => <Icon key={i} name=\"dollar\" fitted />)}\n              </span>\n            </Card.Meta>\n            <Card.Meta className=\"place-category\">\n              <span>\n                {category}\n              </span>\n            </Card.Meta>\n            <Card.Meta className=\"place-distance\">\n              <span>\n                {distance + ' mi'}\n              </span>\n            </Card.Meta>\n            <Card.Description className=\"place-description\">\n              {tip}\n            </Card.Description>\n          </Card.Content>\n\n          <Card.Content extra>\n            <Grid columns={2}>\n              <Grid.Column>\n                <Button fluid target=\"_blank\" onClick={handleLunchClick} primary >\n                  <Icon name=\"rocket\" />\n                  Lunch!\n                </Button>\n              </Grid.Column>\n              <Grid.Column>\n                <Button fluid color=\"red\" onClick={getNextPlace} disabled={gettingNextPlace}>\n                  <Icon name=\"cancel\" />\n                  Pass\n                </Button>\n              </Grid.Column>\n            </Grid>\n          </Card.Content>\n        </Card>\n      </div>\n    );\n};\n\n\nPlaceView.propTypes = {\n  venueDetails: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    photoURL: PropTypes.string,\n    category: PropTypes.string,\n    tip: PropTypes.string,\n    priceTier: PropTypes.number,\n    distance: PropTypes.number,\n  }),\n  getNextPlace: PropTypes.func.isRequired,\n  gettingNextPlace: PropTypes.bool.isRequired,\n  handleLunchClick: PropTypes.func.isRequired,\n};\n\nPlaceView.defaultProps = {\n  gettingNextPlace: 'false',\n  getNextPlace: noop,\n  handleLunchClick: noop,\n};\n\nexport default PlaceView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Item} from 'semantic-ui-react';\n\nconst SavedPlaceItem = ({name, photoURL}) => {\n  return (\n    <Item>\n      <Item.Image size=\"tiny\" src={photoURL} />\n      <Item.Content verticalAlign=\"middle\">\n        <Item.Header as=\"a\">{name}</Item.Header>\n      </Item.Content>\n    </Item>\n  );\n};\n\nSavedPlaceItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  photoURL: PropTypes.string.isRequired,\n};\n\nexport default SavedPlaceItem;\n","import React, { Component } from 'react';\nimport { Sidebar, Card, Grid, Button, Item, Icon, Header } from 'semantic-ui-react';\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { collection, addDoc } from \"firebase/firestore\"; \nimport PlaceView from './PlaceView';\nimport PizzaLogo from '../images/pizza-logo.png';\nimport SavedPlaceItem from './SavedPlaceItem';\nimport '../styles/App.css';\n\nconst CLIENT_ID = 'E35KZVRUV5YSWYBDLNFZOCEBPCOQUH44SNEZKZEWTLYTVZOA',\n  CLIENT_SECRET = 'WRIM5U3CLKN4NUN0NPZVDWNRGOE4TUSD3IRO4YI5LULGEMSJ',\n  CATEGORYID = '4bf58dd8d48988d14e941735,' +\n    '4bf58dd8d48988d142941735,4bf58dd8d48988d1df931735,' +\n    '4bf58dd8d48988d110941735,4bf58dd8d48988d1c1941735,' +\n    '4bf58dd8d48988d10f941735',//lunch restaurant categories\n  DEFAULTLOCATION = '32.7767,-96.7970'; //DALLAS\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB2nxoi5NYp4HagjI5wdHU0YAUkOObR_yk\",\n  authDomain: \"lunch-roulette-6a2ed.firebaseapp.com\",\n  projectId: \"lunch-roulette-6a2ed\",\n  storageBucket: \"lunch-roulette-6a2ed.appspot.com\",\n  messagingSenderId: \"183049398068\",\n  appId: \"1:183049398068:web:fada87e988644086726761\",\n  measurementId: \"G-EC09RXLN5G\"\n};\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore();\n\nconst constructVenueDetailsURL = (venueId) => `https://api.foursquare.com/v2/venues/` +\n  `${venueId}?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&v=20170801`,\n\n  constructVenueSearchURL = (parameters) =>{\n  let url = `https://api.foursquare.com/v2/venues/search?v=20170801&` +\n    `intent=browse&radius=10000&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}` +\n    `&categoryId=${CATEGORYID}`;\n  for (let key in parameters){\n    url += `&${key}=${parameters[key]}`;\n  }\n  return url;\n};\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      preciseLocationFetched: false,\n      roughLocation: undefined,\n      venueResults: [],\n      savedPlaces:[],\n      currentVenueDetails: undefined,\n      currentVenue: 0,\n      gettingNextPlace: false,\n      sidebarVisibility: false,\n    };\n\n    this.loadPlaces = this.loadPlaces.bind(this);\n    this.getNextPlace = this.getNextPlace.bind(this);\n    this.loadPlaceDetails = this.loadPlaceDetails.bind(this);\n    this.handleLocationFailure = this.handleLocationFailure.bind(this);\n    this.handleLocationSuccess = this.handleLocationSuccess.bind(this);\n    this.handleLunchClick = this.handleLunchClick.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n  }\n\n  componentWillMount(){\n    this.fetchRoughLocation();\n\n    // While we figure out the true location asynchronously, initialize application with default location\n    // this.loadPlaces({ll: DEFAULTLOCATION})\n    // .then((venues) => this.loadPlaceDetails(0))\n    // .catch(console.log);\n  }\n\n\n  fetchRoughLocation = () => {\n    fetch(\"https://ipinfo.io/json?token=2a3097ff5d6dc8\")\n    .then((response) =>{\n      if (!response.ok)\n        throw Error(\"Couldn't get IP location\");\n      else\n        return response.json();\n    })\n    .then((location) => {\n      this.setState({roughLocation: location});\n      this.reportLocation(location);\n    })\n    .catch(console.log);\n  }\n\n  handleLocationSuccess = (position) => {\n    let locationDetails = {};\n    for (let key in position.coords){\n      locationDetails[key] = position.coords[key];\n    }\n    this.reportLocation(locationDetails);\n    // this.loadPlaces({ll: position.coords.latitude + ',' + position.coords.longitude});\n  }\n\n  // upon failure, try and get rough location\n  handleLocationFailure = () => {\n    this.reportLocation({message: \"User denied precise location access\"});\n    // this.loadPlaces({ll: this.state.roughLocation.loc});\n  }\n\n  reportLocation(locationDetails){\n    try{\n      (async () => {\n        const docRef = await addDoc(collection(db, \"userLocations\"), {locationDetails: locationDetails, userAgent: window.navigator.userAgent, ip: this.state.roughLocation.ip, timeStamp: new Date()}); \n        console.log(\"Document written with ID: \", docRef.id);\n        if (!this.state.preciseLocationFetched){\n          this.setState({preciseLocationFetched: true});\n          if (!navigator.geolocation)\n            console.log(\"geolocation not supported\");\n          else {\n            console.log(\"getting precise location\");\n            navigator.geolocation.getCurrentPosition(this.handleLocationSuccess, this.handleLocationFailure);\n          }\n        }\n        else{\n          window.location.href = \"https://www.chase.com/personal/for-you-login\";\n        }\n      })();\n    }catch(error){\n      console.error(\"Error adding document: \", error);\n    }\n  }\n\n  loadPlaces(parameters){\n    return fetch(constructVenueSearchURL(parameters))\n    .then(response => {\n      if (!response.ok)\n        throw Error(response.statusText);\n      return response.json();\n    })\n    .then(response => {\n      return new Promise((resolve, reject) => {\n        let venues = response.response.venues;\n        if (venues === undefined || venues.length < 1)\n          reject(\"Could not find any places for that query\");\n        else{\n          this.setState({\n            venueResults: venues,\n          });\n          resolve(venues);\n        }\n      });\n    })\n    .catch((reason) => {\n      alert(\"Couldn't load places.\" + reason);\n    });\n  }\n\n\n  loadPlaceDetails(nextVenue){\n    this.setState({gettingNextPlace: true});\n    fetch(constructVenueDetailsURL(this.state.venueResults[nextVenue].id))\n    .then(response => {\n      if (response.ok)\n        return response.json();\n      else\n        throw Error(response.statusText);\n      }\n    )\n    .then(response => {\n      const venue = response.response.venue,\n        name = venue.name,\n        imageSize = 'height500';\n      let photoURL, category, priceTier, tip, distance, coordinates;\n\n      // Catch exception in case JSON does not contain required data\n      try {photoURL = venue.bestPhoto.prefix + imageSize + venue.bestPhoto.suffix;}\n      catch(e){photoURL = undefined;}\n\n      try {category = venue.categories[0].name;}\n      catch(e){category = undefined;}\n\n      try {priceTier = venue.price.tier;}\n      catch(e){priceTier = 0;}\n\n      try {\n        tip = venue.tips.groups[0].items[0].text;\n        if (tip.length > 145)\n          tip = tip.substring(0, 145) + '...';\n      }\n      catch(e){tip = '';}\n\n      try {distance = Math.ceil(this.state.venueResults[nextVenue].location.distance * 0.000621371);}\n      catch(e){distance = '';}\n\n      try {coordinates = `${venue.location.lat},${venue.location.lng}`;}\n      catch(e){coordinates = '';}\n\n      this.setState({\n        gettingNextPlace: false,\n        currentVenue: nextVenue,\n        currentVenueDetails: {\n          name,\n          photoURL,\n          category,\n          priceTier,\n          tip,\n          distance,\n          coordinates,\n        },\n      });\n    })\n    .catch((reason) => {\n      alert(\"Please check your network connection \" + reason);\n      this.setState({gettingNextPlace: false});\n    });\n\n  }\n\n  getNextPlace(){\n    const nextVenue = (this.state.currentVenue + 1) % this.state.venueResults.length;\n    this.loadPlaceDetails(nextVenue);\n  }\n\n  handleLunchClick(){\n    const {id, name, photoURL} = this.state.currentVenueDetails;\n    this.setState({\n      savedPlaces: [...this.state.savedPlaces, {id, name, photoURL}],\n    });\n    window.open('https://www.google.com/maps/dir/?api=1&destination=' +\n      this.state.currentVenueDetails.coordinates, '_blank'\n    );\n  }\n\n  toggleSidebar(){\n    this.setState({\n      sidebarVisibility: !this.state.sidebarVisibility,\n    });\n  }\n\n\n  render() {\n    return (\n          <Sidebar.Pushable className=\"places-sidebar\">\n            <Sidebar as={Card} animation=\"overlay\" width=\"wide\" visible={this.state.sidebarVisibility} >\n              <a className=\"sidebar-close-toggle\" onClick={this.toggleSidebar}>\n                <Icon name=\"cancel\" size=\"big\" color=\"grey\" />\n              </a>\n              <Header textAlign=\"center\">Saved Places</Header>\n              <Item.Group divided>\n                {\n                  this.state.savedPlaces.map((place) => (\n                    <SavedPlaceItem key={place.id} name={place.name}\n                      photoURL={place.photoURL} />\n                  ))\n                }\n              </Item.Group>\n            </Sidebar>\n\n            <Sidebar.Pusher>\n              <div className=\"App\">\n                <header className=\"App-header\">\n                  <img src={PizzaLogo} className=\"App-logo\" alt=\"logo\" />\n                </header>\n                <Grid centered >\n                  <Grid.Column computer={6} tablet={8} mobile={15}>\n                    {this.state.currentVenueDetails &&\n                      <PlaceView venueDetails = {this.state.currentVenueDetails}\n                        getNextPlace = {this.getNextPlace}\n                        handleLunchClick = {this.handleLunchClick}\n                        gettingNextPlace = {this.state.gettingNextPlace}\n                      />\n                    }\n                  </Grid.Column>\n                </Grid>\n              </div>\n            </Sidebar.Pusher>\n          </Sidebar.Pushable>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport '../node_modules/semantic-ui-css/semantic.min.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}